name: Deploy to Yandex Cloud

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: your-dockerhub-username/app-name
  DOCKER_TAG: latest
  SSH_USER: ubuntu

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Ограничение времени выполнения
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        run: |
          cd app
          docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
          docker push $DOCKER_IMAGE:$DOCKER_TAG
          
      - name: Deploy to VM Group
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.LB_IP }}  # Используем IP балансировщика для health check
          username: $SSH_USER
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Получаем список ВМ из target group
            VM_IPS=$(yc load-balancer target-group get $TG_ID --format json | jq -r '.targets[].address')
            
            for IP in $VM_IPS; do
              echo "Deploying to $IP"
              ssh -o StrictHostKeyChecking=no $SSH_USER@$IP "
                docker pull $DOCKER_IMAGE:$DOCKER_TAG
                docker stop app || true
                docker rm app || true
                docker run -d --name app -p 80:80 $DOCKER_IMAGE:$DOCKER_TAG
              "
            done
            
            # Health check
            echo "Verifying deployment"
            curl --retry 5 --retry-delay 10 --fail http://${{ secrets.LB_IP }}/health
            
      - name: Rollback on failure
        if: ${{ failure() }}
        run: |
          echo "Deployment failed! Rolling back..."
          # Реализация отката (например, запуск предыдущей версии)